set autoread                    " Load file from disk, ie for git reset
set nocompatible		            " Not concerned with vi compatibility
set lazyredraw                  " Don't update while executing macros
set history=1000  		          " Remember last 1000 commands
set scrolloff=4                 " Keep at least 4 lines below cursor
set expandtab                   " Convert <tab> to spaces (2 or 4)
set shiftwidth=2
set softtabstop=2
set secure                      " Limit what modelines and autocmds can do
set autowrite                   " write for me when I take any action
set laststatus=2
set noshowmode
set nu
set backspace=indent,eol,start  " make backspaces deletejsensibly
set listchars=tab:>.,trail:.,extends:#,nbsp:.
set smartcase
set ignorecase
set grepprg=ack

let g:grep_cmd_opts = '--noheading'
let mapleader = ' '

" Specify a directory for plugins
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

" You will load your plugin here
Plug 'tomtom/tcomment_vim'

" Leader C is the prefix for code related mapp√Ængs
noremap <silent> <Leader>cc :TComment<CR>

Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
nnoremap <C-p> :GFiles<CR>
nnoremap <C-t> :History<CR>
nnoremap <silent> <Leader>f :Rg<CR>

Plug 'itchyny/lightline.vim'

Plug 'sheerun/vim-polyglot'

Plug 'editorconfig/editorconfig-vim'

Plug 'godlygeek/tabular'
vnoremap <silent> <Leader>cee    :Tabularize /=
vnoremap <silent> <Leader>cet    :Tabularize /#
vnoremap <silent> <Leader>ce     :Tabularize /

Plug 'vim-scripts/vim-auto-save'

let g:auto_save = 1
let g:auto_save_in_insert_mode = 0

Plug 'christoomey/vim-tmux-navigator'

Plug 'skwp/greplace.vim'

Plug 'williamboman/mason.nvim', { 'branch': 'main' }
Plug 'williamboman/mason-lspconfig.nvim', { 'branch': 'main' }
Plug 'neovim/nvim-lspconfig'

lua << EOF
require("mason").setup()
require("mason-lspconfig").setup {
    ensure_installed = { "gopls", "typescript-language-server" },
}
EOF

" Initialize plugin system
call plug#end()


" reloads .vimrc -- making all changes active
map <silent> <Leader>sop :source ~/.config/nvim/init.vim<CR>:PlugInstall<CR>:bdelete<CR>:exe ":echo 'vimrc reloaded'"<CR>


nnoremap <silent> <Leader>bb :Buffers<CR>
nnoremap <silent> <Leader>bn :bn<CR>
nnoremap <silent> <Leader>bd :bdelete<CR>
nnoremap <silent> <Leader>bu :bunload<CR>
nnoremap <silent> <Leader>bl :setnomodifiable<CR>

map <CR> o<Esc>k

cmap w!! %!sudo tee > /dev/null %

" Quick toggle between two files
nnoremap <leader><leader> <C-^>

" Easy navigation for editing and cding
nmap <Leader>ec :e ~/code/
nmap <Leader>eh :e ~/
nnoremap <leader>er :e <C-r>=escape(expand("%:p:h"), ' ')<cr>/

"Make Y yank to end of line (like D, or C)
nmap y y$

" easy access to the start of the line
nnoremap 0 ^

" leader-; to enter command mode. No more holding shift!
nnoremap <leader>; :
vnoremap <leader>; :

" Quickly open a second window to view files side by side
nmap <LEADER>vn :split<CR>
nmap <LEADER>vs :vsplit<CR>

" Move one line at a time, aka 'fine ajdustment'
nnoremap j gj
nnoremap k gk

" Go to position of last edit. Mnem: 'Go to Edit'
nnoremap ge `.

" Avoid Escape
imap jj <Esc>

" quick quit
nnoremap Q :qa! <CR>
nnoremap qq :q! <CR>

" copy
nnoremap yy Y

" quick replace
nnoremap <Leader>sub :%s///g<left><left><left>
vnoremap <Leader>sub :s///g<left><left><left>
nnoremap <leader>wub :%s//<C-r><C-w>/g<cr>

" Clipboard
if system('uname')=~'Darwin'
  set clipboard=unnamed
else
  set clipboard=unnamedplus
endif
