#!/bin/sh
#
# Pre-commit hook for code formatting and linting
# This will run before each commit to ensure code quality
#

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "${YELLOW}Running pre-commit hooks...${NC}"

# Check if pre-commit is installed
if command -v pre-commit >/dev/null 2>&1; then
    echo "${GREEN}Running pre-commit...${NC}"
    pre-commit run --all-files
    if [ $? -ne 0 ]; then
        echo "${RED}Pre-commit failed. Please fix the issues above.${NC}"
        exit 1
    fi
else
    echo "${YELLOW}pre-commit not installed, running basic checks...${NC}"

    # Basic checks if pre-commit is not available
    # Check for debugging statements
    if git diff --cached --name-only | xargs grep -l "console.log\|debugger\|pry\|binding.pry\|println" 2>/dev/null; then
        echo "${RED}Debugging statements found. Please remove before committing.${NC}"
        exit 1
    fi

    # Clojure-specific checks
    CLOJURE_FILES=$(git diff --cached --name-only | grep -E "\.(clj|cljs|cljc)$")
    if [ ! -z "$CLOJURE_FILES" ]; then
        if command -v clj-kondo >/dev/null 2>&1; then
            echo "${GREEN}Running clj-kondo on staged files...${NC}"
            echo "$CLOJURE_FILES" | xargs clj-kondo --lint
            if [ $? -ne 0 ]; then
                echo "${RED}Clojure linting failed. Please fix the issues above.${NC}"
                exit 1
            fi
        fi
    fi

    # Check for merge conflict markers
    if git diff --cached --name-only | xargs grep -l "^<<<<<<< \|^======= \|^>>>>>>> " 2>/dev/null; then
        echo "${RED}Merge conflict markers found. Please resolve before committing.${NC}"
        exit 1
    fi
fi

echo "${GREEN}Pre-commit hooks passed!${NC}"
exit 0
